//Automated Backup Solution: 
//Write a script to automate the backup of a specified directory to a remote server or a cloud storage solution.
//The script should provide a report on the success or failure of the backup operation.




#!/bin/bash

# Configuration variables
backup_source="/path/to/backup/source"
backup_dest="/path/to/backup/destination"
backup_log="/var/log/backup.log"
remote_user="remote_user"
remote_host="remote_host"
remote_dir="/path/to/remote/backup/location"

# Function to perform backup
perform_backup() {
    echo "Starting backup at $(date)" >> "$backup_log"
    rsync -avz --delete "$backup_source" "$backup_dest" >> "$backup_log" 2>&1
    if [ $? -eq 0 ]; then
        echo "Backup successful at $(date)" >> "$backup_log"
        # Transfer backup to remote server
        transfer_to_remote
    else
        echo "Backup failed at $(date)" >> "$backup_log"
        echo "Backup operation encountered an error. Check $backup_log for details."
    fi
}

# Function to transfer backup to remote server
transfer_to_remote() {
    echo "Transferring backup to remote server at $(date)" >> "$backup_log"
    rsync -avz --delete "$backup_dest" "$remote_user@$remote_host:$remote_dir" >> "$backup_log" 2>&1
    if [ $? -eq 0 ]; then
        echo "Backup transfer to remote server successful at $(date)" >> "$backup_log"
    else
        echo "Backup transfer to remote server failed at $(date)" >> "$backup_log"
        echo "Backup transfer encountered an error. Check $backup_log for details."
    fi
}

# Main function
main() {
    perform_backup
}

# Run the main function
main

